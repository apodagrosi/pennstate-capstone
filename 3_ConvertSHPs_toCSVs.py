#==============================================================================
# MIT License
# 
# Copyright (c) 2017 Angelo Podagrosi
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
#==============================================================================
# -*- coding: utf-8 -*-
"""
SCRIPT OVERVIEW AND CODE TO BE CHANGED BY USER

This code will convert swath polygon shapefiles to CSVs and add WKT geometry field
1) Script will loop through folder searching for '.shp' files on which to perform operations
2) Output directory will contain output CSVs
        -- Note that output directories need to be created before script execution

Main components to be changed by user:
1) Create output directory to contain CSVs generated by script
2) Input and output directory paths (top)

Code created spring 2017 by Angelo Podagrosi
Questions to angelo.podagrosi@gmail.com
    
"""

# Import necessary Python packages and libraries
import os
import sys
import csv
import datetime

# Verifying import of necessary versions 'gdal' and 'ogr' libraries
try:
    from osgeo import ogr, gdal
except:
    sys.exit('ERROR: cannot find GDAL/OGR modules')

version_num = int(gdal.VersionInfo('VERSION_NUM'))
print(version_num)
if version_num < 1100000:
    sys.exit('ERROR: Python bindings of GDAL 1.10 or later required')

# Print current time to assist in tracking total processing time
print("Current time: " + str(datetime.datetime.now()))

# Input directories of polygon swath shapefiles and output directories of CSVs to be generated
directoryInput_yield_swathSHP_JD = r'FILE PATH TO FOLDER OF RAW PRECISION AGRICULTURE SHAPEFILES - #1\Swath'
    # Example: r'C:\GIS\PrecisionAg\Operational\'
directoryOutput_yield_swathCSV_JD = r'FILE PATH TO FOLDER TO CONTAIN CSV OUTPUTS - #1\CSV_WKT'

directoryInput_yield_swathSHP_AgFiniti = r'FILE PATH TO FOLDER OF RAW PRECISION AGRICULTURE SHAPEFILES - #2\Swath'
directoryOutput_yield_swathCSV_AgFiniti = r'FILE PATH TO FOLDER TO CONTAIN CSV OUTPUTS - #2\CSV_WKT'

###############################################################################
## MAIN SOURCE for code below: https://gis.stackexchange.com/questions/19163/how-to-convert-shp-to-csv-including-attributes-and-geometry

# Definition function to process shapefiles to CSVs
def processSwathSHP(inputSHPdir, outputCSVdir, name):
    print("Current time: " + str(datetime.datetime.now()))
    print("Processing SHP data: " + str(name))    
    for input_file in os.listdir(inputSHPdir):
        #print (os.path.join(swathYield_JD_folder, input_file))    
        #print(input_file)
        
        # Loop through only shapefiles (file extension .shp)
        if input_file[-4:] == '.shp':
            # Print file name
            print(input_file)
            
            # Identify only the file name itself
            file_name = str(input_file[:-4])
            driver = ogr.GetDriverByName("ESRI Shapefile")
            # Access the shapefile as read-only
            dataSource = driver.Open((os.path.join(inputSHPdir, input_file)), 0)    # 0 means read-only; 1 means writeable.
            
            # .GetLayer allows access to features in a layer - http://pcjericks.github.io/py-gdalogr-cookbook/layers.html#iterate-over-features
            layer = dataSource.GetLayer()
                # For instance could access attributes of a specific field using: for feature in layer: print feature.GetField("Elevation_")
            
            # Identify the CSV filename to be created
            csvFile = open(str((os.path.join(outputCSVdir,file_name)) + ".csv") , 'wb')  # Note a change is necessary here for Python 3.x
            
            # Access the fields of the layer and count of fields - http://pcjericks.github.io/py-gdalogr-cookbook/layers.html#get-shapefile-fields-get-the-user-defined-fields
            dfn = layer.GetLayerDefn()
            nFields = dfn.GetFieldCount()
    
            fields = []
            for i in range(nFields):
                fields.append(dfn.GetFieldDefn(i).GetName())
            
            # Append new field to contain WKT 
            fields.append('WKT')
            
            csvWriter = csv.DictWriter(csvFile, fields)
            try:
                csvWriter.writeheader()
            except:
                csvFile.write(','.join(fields)+'\n')
    
            for feature in layer:
                attributes = feature.items()
                geom = feature.GetGeometryRef()
                attributes['WKT'] = geom.ExportToWkt() 
                csvWriter.writerow(attributes)
            
            del csvWriter, layer, dataSource
            csvFile.close()
    print("Completed processing shapefiles to CSV: " + str(name))
    print("Current time: " + str(datetime.datetime.now()))
#############

processSwathSHP(directoryInput_yield_swathSHP_JD, directoryOutput_yield_swathCSV_JD, "Yield - John Deere")
processSwathSHP(directoryInput_yield_swathSHP_AgFiniti, directoryOutput_yield_swathCSV_AgFiniti, "Yield - AgFiniti")